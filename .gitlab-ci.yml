stages:
  - build
  # - test

# build:arch:
#   image: archlinux/latest
#   stage: build
#   before_script:
#     - pacman -Syu --noconfirm
#     - pacman -S base-devel boost cmake gcc clang git curl wget pugixml nlohmann-json --noconfirm
#   script:
#     - mkdir build
#     - cd build
#     - cmake ..
#     - make
#   artifacts:
#     paths:
#       - build
           
# test:arch:
#   image: archlinux/latest
#   stage: test
#   before_script:
#     - pacman -Syu --noconfirm
#     - pacman -S base-devel boost cmake gcc clang git curl wget pugixml nlohmann-json --noconfirm
#   script:
#     - cd build
#     - ctest
#   dependencies:
#     - build:arch
    
build:ubuntu:lunar:
  image: ubuntu:23.04
  stage: build
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  before_script:
    - apt-get update
    - apt-get upgrade -y
    - ln -fs /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
    - apt-get install -y tzdata
    - dpkg-reconfigure --frontend noninteractive tzdata
    - apt-get install -y build-essential checkinstall zlib1g-dev 
    - apt-get install -y libboost-all-dev cmake gcc clang git curl libcurl4-gnutls-dev wget libssl-dev libpugixml-dev nlohmann-json3-dev libpq-dev postgresql-server-dev-all catch2 doxygen
  script:
    - mkdir build
    - cd build
    - cmake -DPostgreSQL_TYPE_INCLUDE_DIR=/usr/include/postgresql/ ..
    - make
  artifacts:
    paths:
      - build
    
# test:ubuntu:lunar:
#   image: ubuntu:23.04
#   stage: test
#   variables:
#     DEBIAN_FRONTEND: "noninteractive"
#     LANG: en_US.utf8
#   before_script:
#     - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
#     - apt-get update
#     - apt-get install -y locales && rm -rf /var/lib/apt/lists/* localedef -i en_US -f UTF-8 /usr/share/locale/locale.alias en_US.UTF-8
#     - apt-get update
#     - apt-get upgrade -y
#     - ln -fs /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
#     - apt-get install -y tzdata
#     - dpkg-reconfigure --frontend noninteractive tzdata
#     - apt-get install -y build-essential checkinstall zlib1g-dev libboost-all-dev cmake gcc clang git curl wget libssl-dev libpugixml-dev nlohmann-json3-dev catch2 doxygen
#     - apt-get install -y postgresql postgresql-client libpq-dev postgresql-contrib postgresql-server-dev-all
#     - sed -E "s/local\s+all(.+)peer/local all\1 trust/g" /etc/postgresql/15/main/pg_hba.conf > /tmp/pg_hba.conf
#     - cp /tmp/pg_hba.conf /etc/postgresql/15/main/pg_hba.conf
#     - service postgresql start
#     - service postgresql status
#   script:
#     - cd build
#     - ctest
#   dependencies:
#     - build:ubuntu:lunar

    
